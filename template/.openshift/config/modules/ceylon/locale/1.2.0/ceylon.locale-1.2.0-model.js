(function(define) { define(function(require, ex$, module) {
ex$.$CCMM$={"$mod-version":"1.2.0","$mod-deps":["ceylon.language\/1.2.0",{exp:1,path:"ceylon.collection\/1.2.0"},{exp:1,path:"ceylon.time\/1.2.0"}],"$mod-bin":"8.0","ceylon.locale":{Locale:{super:{md:"$",pk:"$",nm:"Basic"},pa:17,ps:[{$t:{pk:".",nm:"Language"},pa:1,mt:"prm",an:{doc:["The language of this locale."]},nm:"language",$hdn:1},{$t:{pk:".",nm:"Formats"},pa:1,mt:"prm",an:{doc:["Localized date, time, currency, and numeric formats\nfor this locale."]},nm:"formats",$hdn:1},{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",pk:".",nm:"Language"}],nm:"Map"},pa:1,mt:"prm",an:{doc:["Localized representations of other languages."]},nm:"languages",$hdn:1},{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",pk:".",nm:"Currency"}],nm:"Map"},pa:1,mt:"prm",an:{doc:["Localized representations of other currencies."]},nm:"currencies",$hdn:1},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},def:1,mt:"prm",nm:"currencyCode",$hdn:1},{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"Character"},{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Map"},def:1,mt:"prm",an:{doc:["Localized mappings of uppercase characters to lowercase."]},nm:"lowercaseMappings",$hdn:1},{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"Character"},{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Map"},def:1,mt:"prm",an:{doc:["Localized mappings of lowercase characters to uppercase."]},nm:"uppercaseMappings",$hdn:1}],mt:"c",$at:{currencyCode$ouqc4u:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},mt:"a",nm:"currencyCode"},lowercaseMappings$a7zh92:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"Character"},{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Map"},mt:"a",an:{doc:["Localized mappings of uppercase characters to lowercase."]},nm:"lowercaseMappings"},formats:{$t:{pk:".",nm:"Formats"},pa:1,mt:"a",an:{doc:["Localized date, time, currency, and numeric formats\nfor this locale."]},nm:"formats"},languages:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",pk:".",nm:"Language"}],nm:"Map"},pa:1,mt:"a",an:{doc:["Localized representations of other languages."]},nm:"languages"},string:{$t:{md:"$",pk:"$",nm:"String"},pa:3,mt:"g",nm:"string"},uppercaseMappings$lassd9:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"Character"},{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Map"},mt:"a",an:{doc:["Localized mappings of lowercase characters to uppercase."]},nm:"uppercaseMappings"},language:{$t:{pk:".",nm:"Language"},pa:1,mt:"a",an:{doc:["The language of this locale."]},nm:"language"},currency:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"Currency"}]},pa:1,mt:"g",an:{doc:["The currency of this locale."]},nm:"currency"},currencies:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",pk:".",nm:"Currency"}],nm:"Map"},pa:1,mt:"a",an:{doc:["Localized representations of other currencies."]},nm:"currencies"}},$m:{uppercase:{$t:{md:"$",pk:"$",nm:"String"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"string"}]],mt:"m",an:{doc:["A string with the characters of the given string\nconverted to uppercase according to the rules of this\nlocale."]},nm:"uppercase"},search$z09qq4:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Resource"}]},ps:[[{$t:{md:"$",pk:"ceylon.language.meta.declaration",nm:"Module"},mt:"prm",nm:"mod"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"name"}]],mt:"m",$m:{find$dhqnnv:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Resource"}]},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"tag"}]],mt:"m",nm:"find"}},nm:"search"},path$xxn08x:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"ceylon.language.meta.declaration",nm:"Package"},mt:"prm",nm:"pack"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"name"}]],mt:"m",nm:"path"},lowercase:{$t:{md:"$",pk:"$",nm:"String"},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"string"}]],mt:"m",an:{doc:["A string with the characters of the given string\nconverted to lowercase according to the rules of this\nlocale."]},nm:"lowercase"},messages:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Map"},pa:1,ps:[[{$t:{comp:"u",l:[{md:"$",pk:"ceylon.language.meta.declaration",nm:"Module"},{md:"$",pk:"ceylon.language.meta.declaration",nm:"Package"}]},mt:"prm",an:{doc:["The module to which the resource bundle belongs."]},nm:"component"},{$t:{md:"$",pk:"$",nm:"String"},def:1,mt:"prm",an:{doc:["The name of the resource bundle, or `\"Messages\"`\nby default."]},nm:"name"}]],mt:"m",an:{doc:["Given a [[Module]] or [[Package]] and the name of a \nresource bundle belonging to that package or module, \nreturn a map of string keys to string values for this \nlocale.\n\nFor example, suppose the system locale is `en-AU`, and \nthis code occurs in the module `hello.world`:\n\n    value messages = systemLocale.messages(`module`, \"Errors\");\n    \nThen the returned map `messages` will contain \nentries from a properties file in the resources of the \nmodule `hello.world`. The following files will be \nsearched, in order:\n\n1. `\/hello\/world\/Errors_en_AU.properties`\n2. `\/hello\/world\/Errors_en.properties`\n3. `\/hello\/world\/Errors.properties`\n\nIf no properties file is found, the map with be empty."]},nm:"messages"}},an:{doc:["Aggregates localized information associated with a certain \nlocale, including:\n\n- the local [[language]],\n- the local [[currency]],\n- localized date, time, currency, and numeric [[formats]],\n- local representations of other [[languages]] and\n  [[currencies]].\n\nThe locale also provides access to associated localized \nmessage bundles via [[messages]]."]},nm:"Locale"},monthDayYear:{$t:{pk:".",nm:"DateField.Order"},pa:1,mt:"a",an:{doc:["The month\/day\/year [[date field ordering|DateField.Order]]."]},nm:"monthDayYear"},parsePropertiesFile:{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"textContent"},{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"key"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"text"}]],mt:"prm",$pt:"f",nm:"handleEntry"}]],$ff:1,mt:"m",$m:{handleEntry$gmi74q:{$t:{md:"$",pk:"$",nm:"Anything"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"key"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"text"}]],$ff:1,mt:"m",nm:"handleEntry"}},an:{doc:["Parse a properties file."]},nm:"parsePropertiesFile"},"$pkg-pa":1,columns:{$t:{md:"$",pk:"$",tp:[{comp:"u",mt:"tp",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},{mt:"tp",md:"$",pk:"$",nm:"Null"}],nm:"Iterable"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"line"}]],mt:"m",nm:"columns"},parseCurrencies:{$t:{md:"ceylon.collection",pk:"ceylon.collection",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",pk:".",nm:"Currency"}],nm:"HashMap"},ps:[[{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Iterator"},mt:"prm",nm:"lines"}]],mt:"m",nm:"parseCurrencies"},parseFormats:{$t:{pk:".",nm:"Formats"},ps:[[{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Iterator"},mt:"prm",nm:"lines"}]],mt:"m",nm:"parseFormats"},interpolate:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",md:"$",pk:"$",tp:[{comp:"u",mt:"tp",l:[{md:"$",pk:"$",nm:"String"},{comp:"u",l:[{md:"$",pk:"$",nm:"Object"},{pk:".",nm:"Nothing"}]}]},{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"Object"}],nm:"Sequential"}],nm:"Tuple"}],nm:"Callable"},pa:1,ps:[[{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Map"},mt:"prm",nm:"messages"}]],mt:"m",nm:"interpolate"},run:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,$ff:1,mt:"m",nm:"run"},Formats:{super:{md:"$",pk:"$",nm:"Basic"},pa:17,ps:[{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"shortDateFormat",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"mediumDateFormat",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"longDateFormat",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"shortTimeFormat",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"mediumTimeFormat",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"longTimeFormat",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"integerFormat",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"floatFormat",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"percentageFormat",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",nm:"currencyFormat",$hdn:1},{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Sequential"},pa:1,mt:"prm",nm:"monthNames",$hdn:1},{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Sequential"},pa:1,mt:"prm",nm:"monthAbbreviations",$hdn:1},{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Sequential"},pa:1,mt:"prm",nm:"weekdayNames",$hdn:1},{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Sequential"},pa:1,mt:"prm",nm:"weekdayAbbreviations",$hdn:1},{$t:{$t:{md:"$",pk:"$",nm:"String"},count:2,pk:"$",nm:"Tuple"},mt:"prm",nm:"ampm",$hdn:1}],mt:"c",$at:{integerFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"integerFormat"},floatFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"floatFormat"},percentageFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"percentageFormat"},weekdayNames:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Sequential"},pa:1,mt:"a",nm:"weekdayNames"},shortDateFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"shortDateFormat"},mediumDateFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"mediumDateFormat"},am:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"g",nm:"am"},longDateFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"longDateFormat"},currencyFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"currencyFormat"},weekdayAbbreviations:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Sequential"},pa:1,mt:"a",nm:"weekdayAbbreviations"},monthAbbreviations:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Sequential"},pa:1,mt:"a",nm:"monthAbbreviations"},mediumTimeFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"mediumTimeFormat"},shortTimeFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"shortTimeFormat"},ampm$voz1ah:{$t:{$t:{md:"$",pk:"$",nm:"String"},count:2,pk:"$",nm:"Tuple"},mt:"a",nm:"ampm"},pm:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"g",nm:"pm"},longTimeFormat:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",nm:"longTimeFormat"},monthNames:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Sequential"},pa:1,mt:"a",nm:"monthNames"}},$m:{formatTimeWithTZ$uzuurq:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"format"},{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableTime"},mt:"prm",nm:"time"},{$t:{md:"ceylon.time",pk:"ceylon.time.timezone",nm:"TimeZone"},mt:"prm",nm:"timeZone"}]],mt:"m",nm:"formatTimeWithTZ"},mediumFormatTime:{$t:{md:"$",pk:"$",nm:"String"},pa:1,ps:[[{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableTime"},mt:"prm",nm:"time"}]],mt:"m",nm:"mediumFormatTime"},applyFormat$n293gt:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"format"},{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"token"},{$t:{nm:"Value"},mt:"prm",nm:"val"}]],mt:"prm",$pt:"f",nm:"formatToken"},{$t:{nm:"Value"},mt:"prm",nm:"val"}]],mt:"m",$m:{interpolateToken$yowpqr:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"Integer"},{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Entry"},mt:"prm",nm:"token"}]],mt:"m",nm:"interpolateToken"},formatToken$xaehc0:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"token"},{$t:{nm:"Value"},mt:"prm",nm:"val"}]],mt:"m",nm:"formatToken"}},tp:[{nm:"Value"}],nm:"applyFormat"},mediumFormatDate:{$t:{md:"$",pk:"$",nm:"String"},pa:1,ps:[[{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableDate"},mt:"prm",nm:"date"}]],mt:"m",nm:"mediumFormatDate"},shortFormatDate:{$t:{md:"$",pk:"$",nm:"String"},pa:1,ps:[[{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableDate"},mt:"prm",nm:"date"}]],mt:"m",nm:"shortFormatDate"},longFormatDate:{$t:{md:"$",pk:"$",nm:"String"},pa:1,ps:[[{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableDate"},mt:"prm",nm:"date"}]],mt:"m",nm:"longFormatDate"},applyFormatWithTZ$ercqyp:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"format"},{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"token"},{$t:{nm:"Value"},mt:"prm",nm:"val"},{$t:{md:"ceylon.time",pk:"ceylon.time.timezone",nm:"TimeZone"},mt:"prm",nm:"timeZone"}]],mt:"prm",$pt:"f",nm:"formatToken"},{$t:{nm:"Value"},mt:"prm",nm:"val"},{$t:{md:"ceylon.time",pk:"ceylon.time.timezone",nm:"TimeZone"},mt:"prm",nm:"timeZone"}]],mt:"m",$m:{interpolateToken$v4rhsv:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"Integer"},{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Entry"},mt:"prm",nm:"token"}]],mt:"m",nm:"interpolateToken"},formatToken$tq99e4:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"token"},{$t:{nm:"Value"},mt:"prm",nm:"val"},{$t:{md:"ceylon.time",pk:"ceylon.time.timezone",nm:"TimeZone"},mt:"prm",nm:"timeZone"}]],mt:"m",nm:"formatToken"}},tp:[{nm:"Value"}],nm:"applyFormatWithTZ"},formatTimeToken$1kkotf:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"token"},{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableTime"},mt:"prm",nm:"time"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"ceylon.time",pk:"ceylon.time.timezone",nm:"TimeZone"}]},def:1,mt:"prm",nm:"timeZone"}]],mt:"m",nm:"formatTimeToken"},parseDate:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"ceylon.time",pk:"ceylon.time",nm:"Date"}]},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",an:{doc:["The formatted date."]},nm:"text"},{$t:{pk:".",nm:"DateField.Order"},def:1,mt:"prm",an:{doc:["The order of the fields of the fomatted date,\nusually [[dayMonthYear]], [[yearMonthDay]], or\n[[monthDayYear]]."]},nm:"dateOrder"},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"Integer"}]},def:1,mt:"prm",an:{doc:["The earliest year which can be written in two-digit\nform, or `null` if two-digit years should be \ninterpreted literally. Defaults to 80 years before\nthe current year."]},nm:"twoDigitCutoffYear"},{$t:{md:"$",pk:"$",nm:"String"},def:1,mt:"prm",an:{doc:["The characters to recognize as field separators."]},nm:"separators"}]],mt:"m",an:{doc:["Given a [[string|text]] expected to represent a \nformatted date, comprising day, month, and year fields, \nthe [[order|dateOrder]] of the fields in the formatted \ndate, and a list of [[delimiting characters|separators]], \nreturn a [[Date]], or `null` if the string cannot be \ninterpreted as a date with the given field order and \ndelimiters. If [[twoDigitCutoffYear]] is non-null, then \nformatted dates may be written with two-digit years.\n\nFor example\n\n    au.formats.parseDate(\"3 June 2010\")\n\nproduces the date `2010-06-03`, if `au` is the `Locale`\nfor `en-AU`. And\n\n    us.formats.parseDate(\"01\/02\/03\", monthDayYear)\n\nproduces the date `2003-01-02`, if `us` is the `Locale`\nfor `en-US`."],throws:["AssertionError","if the given [[order|dateOrder]] does not \ninclude the day, month, and year"]},nm:"parseDate"},shortFormatTime:{$t:{md:"$",pk:"$",nm:"String"},pa:1,ps:[[{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableTime"},mt:"prm",nm:"time"}]],mt:"m",nm:"shortFormatTime"},formatDateToken$y7cwa:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"token"},{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableDate"},mt:"prm",nm:"date"}]],mt:"m",nm:"formatDateToken"},longFormatTime:{$t:{md:"$",pk:"$",nm:"String"},pa:1,ps:[[{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableTime"},mt:"prm",nm:"time"},{$t:{md:"ceylon.time",pk:"ceylon.time.timezone",nm:"TimeZone"},mt:"prm",nm:"timeZone"}]],mt:"m",nm:"longFormatTime"},twelveHour$zetgtx:{$t:{pk:"$",l:[{md:"$",pk:"$",nm:"Integer"},{md:"$",pk:"$",nm:"String"}],nm:"Tuple"},ps:[[{$t:{md:"$",pk:"$",nm:"Integer"},mt:"prm",nm:"hour"}]],mt:"m",nm:"twelveHour"},formatDate$ofaphp:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"format"},{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableDate"},mt:"prm",nm:"date"}]],mt:"m",nm:"formatDate"},formatTime$dgp8zq:{$t:{md:"$",pk:"$",nm:"String"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"format"},{$t:{md:"ceylon.time",pk:"ceylon.time.base",nm:"ReadableTime"},mt:"prm",nm:"time"}]],mt:"m",nm:"formatTime"},parseTime:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"ceylon.time",pk:"ceylon.time",nm:"Time"}]},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",an:{doc:["The formatted time."]},nm:"text"},{$t:{md:"$",pk:"$",nm:"String"},def:1,mt:"prm",an:{doc:["The characters to recognize as field separators."]},nm:"separators"}]],mt:"m",an:{doc:["Given a [[string|text]] expected to represent a \nformatted time, comprising an hour, followed by \noptional minute, second, and millisecond fields, \nfollowed by an optional AM or PM marker, and a list of \n[[delimiting characters|separators]], return a [[Time]], \nor `null` if the string cannot be interpreted as a time \nwith the given delimiters."]},nm:"parseTime"}},an:{doc:["Date, time, currency, and numeric formats for a certain\n[[Locale]]."]},nm:"Formats"},yearMonthDay:{$t:{pk:".",nm:"DateField.Order"},pa:1,mt:"a",an:{doc:["The year\/month\/day [[date field ordering|DateField.Order]]."]},nm:"yearMonthDay"},locale:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"Locale"}]},pa:1,ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"tag"}]],mt:"m",an:{doc:["Returns a [[Locale]] containing information about the\nlocale with the given locale [[tag]]."]},nm:"locale"},parseLanguage:{$t:{pk:"$",l:[{pk:".",nm:"Language"},{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]}],nm:"Tuple"},ps:[[{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Iterator"},mt:"prm",nm:"lines"},{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"tag"}]],mt:"m",nm:"parseLanguage"},localeModule:{$t:{md:"$",pk:"ceylon.language.meta.declaration",nm:"Module"},mt:"a",nm:"localeModule"},Language:{super:{md:"$",pk:"$",nm:"Basic"},pa:17,ps:[{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",an:{doc:["The BCP 47 locale tag, for example, `en`, `ca`, `en-AU`, \nor `es-MX`."]},nm:"tag",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",an:{doc:["The language code, for example, `en`, or `es`."]},nm:"languageCode",$hdn:1},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:1,mt:"prm",an:{doc:["The country or region code, for example, `AU`, or `MX`."]},nm:"countryCode",$hdn:1},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:1,mt:"prm",an:{doc:["Variant values, separated by underscores."]},nm:"variant",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",an:{doc:["A localized displayable name for this [[tag]], for\nexample, `English`, `inglés`, `English (Australia)`, \nor `inglés (Australia)`."]},nm:"displayName",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",an:{doc:["A localized displayable name for the [[languageCode]],\nfor example, `English`, or `inglés`."]},nm:"displayLanguage",$hdn:1},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:1,mt:"prm",an:{doc:["A localized displayable name for the [[countryCode]],\nfor example, `Australia`, or `México`."]},nm:"displayCountry",$hdn:1},{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:1,mt:"prm",an:{doc:["A localized displayable name for the language \n[[variant]]."]},nm:"displayVariant",$hdn:1}],mt:"c",$at:{string:{$t:{md:"$",pk:"$",nm:"String"},pa:3,mt:"g",nm:"string"},countryCode:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:1,mt:"a",an:{doc:["The country or region code, for example, `AU`, or `MX`."]},nm:"countryCode"},displayName:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",an:{doc:["A localized displayable name for this [[tag]], for\nexample, `English`, `inglés`, `English (Australia)`, \nor `inglés (Australia)`."]},nm:"displayName"},displayCountry:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:1,mt:"a",an:{doc:["A localized displayable name for the [[countryCode]],\nfor example, `Australia`, or `México`."]},nm:"displayCountry"},variant:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:1,mt:"a",an:{doc:["Variant values, separated by underscores."]},nm:"variant"},displayVariant:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{md:"$",pk:"$",nm:"String"}]},pa:1,mt:"a",an:{doc:["A localized displayable name for the language \n[[variant]]."]},nm:"displayVariant"},tag:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",an:{doc:["The BCP 47 locale tag, for example, `en`, `ca`, `en-AU`, \nor `es-MX`."]},nm:"tag"},languageCode:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",an:{doc:["The language code, for example, `en`, or `es`."]},nm:"languageCode"},displayLanguage:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",an:{doc:["A localized displayable name for the [[languageCode]],\nfor example, `English`, or `inglés`."]},nm:"displayLanguage"}},an:{doc:["Localized information about the language associated with \nthe given locale [[tag]]."]},nm:"Language"},Currency:{super:{md:"$",pk:"$",nm:"Basic"},pa:17,ps:[{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",an:{doc:["The ISO 4217 code for this currency, for example,\n`USD`, or `EUR`."]},nm:"code",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",an:{doc:["ISO 4217 numeric code for this currency, for example,\n`840`, or `978`."]},nm:"numericCode",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",an:{doc:["A localized displayable name for this currency, for \nexample, `dólar estadounidense`."]},nm:"displayName",$hdn:1},{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"prm",an:{doc:["A localized symbol for this currency, for example, `$`,\nor \u20AC."]},nm:"symbol",$hdn:1},{$t:{md:"$",pk:"$",nm:"Integer"},pa:1,mt:"prm",nm:"fractionalDigits",$hdn:1}],mt:"c",$at:{symbol:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",an:{doc:["A localized symbol for this currency, for example, `$`,\nor \u20AC."]},nm:"symbol"},code:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",an:{doc:["The ISO 4217 code for this currency, for example,\n`USD`, or `EUR`."]},nm:"code"},string:{$t:{md:"$",pk:"$",nm:"String"},pa:3,mt:"g",nm:"string"},displayName:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",an:{doc:["A localized displayable name for this currency, for \nexample, `dólar estadounidense`."]},nm:"displayName"},fractionalDigits:{$t:{md:"$",pk:"$",nm:"Integer"},pa:1,mt:"a",nm:"fractionalDigits"},numericCode:{$t:{md:"$",pk:"$",nm:"String"},pa:1,mt:"a",an:{doc:["ISO 4217 numeric code for this currency, for example,\n`840`, or `978`."]},nm:"numericCode"}},an:{doc:["Localized information about the currency with the given \nISO 4217 currency [[code]]."]},nm:"Currency"},systemLocale:{$t:{pk:".",nm:"Locale"},pa:1,mt:"g",an:{see:["system.locale"],doc:["Returns a [[Locale]] containing information about the\nlocale of the current system."]},nm:"systemLocale"},parseLanguages:{$t:{md:"ceylon.collection",pk:"ceylon.collection",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",pk:".",nm:"Language"}],nm:"HashMap"},ps:[[{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Iterator"},mt:"prm",nm:"lines"}]],mt:"m",nm:"parseLanguages"},systemLocaleCache:{$t:{comp:"u",l:[{md:"$",pk:"$",nm:"Null"},{pk:".",nm:"Locale"}]},mt:"a",nm:"systemLocaleCache"},DateField:{super:{md:"$",pk:"$",nm:"Basic"},pa:1,mt:"c",$at:{Order:{pa:1,$alias:{$t:{pk:".",nm:"DateField"},count:3,pk:"$",nm:"Tuple"},mt:"als",an:{doc:["A field ordering for formatted [[ceylon.time::Date]]s."]},nm:"Order"}},an:{doc:["Enumerates the fields of a formatted [[ceylon.time::Date]]."]},nm:"DateField",$cn:{month:{pa:1,nm:"month"},year:{pa:1,nm:"year"},day:{pa:1,nm:"day"}}},parseCaseMappings:{$t:{md:"ceylon.collection",pk:"ceylon.collection",tp:[{mt:"tp",md:"$",pk:"$",nm:"Character"},{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"HashMap"},ps:[[{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"}],nm:"Iterator"},mt:"prm",nm:"lines"}]],mt:"m",nm:"parseCaseMappings"},dayMonthYear:{$t:{pk:".",nm:"DateField.Order"},pa:1,mt:"a",an:{doc:["The day\/month\/year [[date field ordering|DateField.Order]]."]},nm:"dayMonthYear"},runs:{$t:{md:"$",pk:"$",tp:[{mt:"tp",md:"$",pk:"$",nm:"String"},{mt:"tp",md:"$",pk:"$",nm:"Null"}],nm:"Iterable"},ps:[[{$t:{md:"$",pk:"$",nm:"String"},mt:"prm",nm:"text"}]],mt:"m",an:{doc:["Splits a string into 'runs' of the same character."]},nm:"runs"}},"$mod-anns":{doc:["Provides information about locale-specific information\nincluding:\n\n- language,\n- currency,\n- numeric formats, and\n- data\/time formats.\n\nA locale is identified by a _locale tag_, as specified by\nIETF [BCP 47][], which contains:\n\n- a required _language code_, for example `en`, `es`, or \n  `ca`,\n- an optional _script code_, for example, `Latn`, or `Cyrl`, \n- an optional country or _region code_, for example, `AU`, \n  `MX`, or `ES`, and\n- optionally, one or more _variant_ values, and\n- optionally, one or more _extensions_ as name\/value pairs.\n\nFields are separated by the character `-`. For example:\n`en`, `ca`, `en-AU`, `es-MX`.\n\nA [[Locale]] instance may be obtained for a given tag, by\ncalling [[locale]]:\n\n    assert (exists au = locale(\"en-AU\"));\n\nThe [[system locale|systemLocale]] is also available.\n\nThe `Locale` object provides information about the \n[[Language]], [[Currency]] and [[Formats]] of the locale it \nrepresents, along with information about the names of \n[[other languages|Locale.languages]] and \n[[currencies|Locale.currencies]] in that locale.\n\n[BCP 47]: http:\/\/tools.ietf.org\/html\/rfc4647"]},"$mod-name":"ceylon.locale"};
});
}(typeof define==='function' && define.amd ? define : function (factory) {
if (typeof exports!=='undefined') { factory(require, exports, module);
} else { throw 'no module loader'; }
}));
