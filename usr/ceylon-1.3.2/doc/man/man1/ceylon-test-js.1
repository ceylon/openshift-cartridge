'\" -*- coding: us-ascii -*-
.if \n(.g .ds T< \\FC
.if \n(.g .ds T> \\F[\n[.fam]]
.de URL
\\$2 \(la\\$1\(ra\\$3
..
.if \n(.g .mso www.tmac
.TH "ceylon test-js" 1 "1 March 2017" "" ""
.SH NAME
ceylon test-js \- Executes tests on Node.js
.SH SYNOPSIS
'nh
.fi
.ad l
\fBceylon test-js\fR \kx
.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
'in \n(.iu+\nxu
[--cacherep=\fIurl\fR] [--compile[=\fIflags\fR]] [--cwd=\fIdir\fR] [--debug=\fIdebug\fR] [--maven-overrides=\fIfile\fR] [--no-default-repositories] [--node-exe=\fInode-exe\fR] [--offline] [--out=\fIfile\fR] [--overrides=\fIfile\fR] [--rep=\fIurl\fR...] [--report] [--sysrep=\fIurl\fR] [--tag=\fItag\fR...] [--tap[=\fIfile\fR]] [--test=\fItest\fR...] [--timeout=\fIseconds\fR] [--verbose[=\fIflags\fR]] [--version=\fIversion\fR] [--xml-junit-report] [--] {modules}\&...
'in \n(.iu-\nxu
.ad b
'hy
.SH DESCRIPTION
Executes tests in specified \*(T<<modules>\*(T>. The \*(T<<modules>\*(T> arguments are the names of the modules to test with an optional version.
.SH OPTIONS
.TP 
--cacherep=\fIurl\fR
Specifies the folder to use for caching downloaded modules. (default: \*(T<~/.ceylon/cache\*(T>)
.TP 
--compile[=\fIflags\fR]
Determines if and how compilation should be handled. Allowed flags include: \*(T<never\*(T>, \*(T<once\*(T>, \*(T<force\*(T>, \*(T<check\*(T>.
.TP 
--cwd=\fIdir\fR
Specifies the current working directory for this tool. (default: the directory where the tool is run from)
.TP 
--debug=\fIdebug\fR
Shows more detailed output in case of errors.
.TP 
--maven-overrides=\fIfile\fR
Specifies the XML file to use to load Maven artifact overrides. See http://ceylon-lang.org/documentation/current/reference/repository/maven/ for information. Deprecated: use --overrides.
.TP 
--no-default-repositories
Indicates that the default repositories should not be used.
.TP 
--node-exe=\fInode-exe\fR
The path to the node.js executable. Will be searched in standard locations if not specified.
.TP 
--offline, -L
Enables offline mode that will prevent connections to remote repositories.
.TP 
--out=\fIfile\fR
Sets the folder to use for reports. Defalts to \*(T<reports/{test|test\-js}\*(T>.
.TP 
--overrides=\fIfile\fR
Specifies the XML file to use to load module overrides. See http://ceylon-lang.org/documentation/current/reference/repository/maven/ for information. \fIExperimental\fR.
.TP 
--rep=\fIurl\fR
Specifies a module repository containing dependencies. Can be specified multiple times. (default: \*(T<modules\*(T>, \*(T<~/.ceylon/repo\*(T>, \*(T<https://modules.ceylon\-lang.org/repo/1\*(T>)
.TP 
--report
Generates the test results report into HTML format, output directory is set with \*(T<\-\-out\*(T> (experimental).
.TP 
--sysrep=\fIurl\fR
Specifies the system repository containing essential modules. (default: \*(T<$CEYLON_HOME/repo\*(T>)
.TP 
--tag=\fItag\fR
Specifies which tests will be run according to their tags. It can be used as include filter, so only tests with specified tag will be executed. But it can be used also as exclude filter, if tag name is prefixed with !, so only tests without specified tag will be executed..
.TP 
--tap[=\fIfile\fR]
Enables the Test Anything Protocol v13 and writes the results to the specified file. If the file name is empty or \*(T<\-\*(T>, print to standard output.
.TP 
--test=\fItest\fR
Specifies which tests will be run.
.TP 
--timeout=\fIseconds\fR, -T \fIseconds\fR
Sets the timeout for connections to remote repositories, use 0 for no timeout (default: 20).
.TP 
--verbose[=\fIflags\fR], -d
Produce verbose output. If no \*(T<flags\*(T> are given then be verbose about everything, otherwise just be verbose about the flags which are present. Allowed flags include: \*(T<all\*(T>, \*(T<loader\*(T>.
.TP 
--version=\fIversion\fR
Specifies which version of the test module to use.
.TP 
--xml-junit-report
Generates the test results report into JUnit XML format, output directory is set with \*(T<\-\-out\*(T> (experimental).
.SH "COMPILE FLAGS"
The \*(T<\-\-compile\*(T> option can take the following flags: 
.TP 0.2i
\(bu
\fBnever\fR - Never perform any compilation
.TP 0.2i
\(bu
\fBonce\fR - Only compile when the compiled module is not available
.TP 0.2i
\(bu
\fBcheck\fR - Compile when the sources are newer than the compiled module
.TP 0.2i
\(bu
\fBforce\fR - Always compile
.PP
If the flag is given without an argument it's the same as specifying \*(T<check\*(T>. If no flag is given at all it's the same as specifying \*(T<never\*(T>.
.SH "CONFIGURATION FILE"
The test-js tool accepts the following option from the Ceylon configuration file: \*(T<testtool.compile\*(T> (the equivalent option on the command line always has precedence).
.SH EXAMPLE
The following would execute tests in the \*(T<com.example.foobar\*(T> module:
.PP
.nf
\*(T<ceylon test\-js com.example.foobar/1.0.0\*(T>
.fi
