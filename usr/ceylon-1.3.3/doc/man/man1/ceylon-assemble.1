'\" -*- coding: us-ascii -*-
.if \n(.g .ds T< \\FC
.if \n(.g .ds T> \\F[\n[.fam]]
.de URL
\\$2 \(la\\$1\(ra\\$3
..
.if \n(.g .mso www.tmac
.TH "ceylon assemble" 1 "18 August 2017" "" ""
.SH NAME
ceylon assemble \- Generate a Ceylon assembly for a given module
.SH SYNOPSIS
'nh
.fi
.ad l
\fBceylon assemble\fR \kx
.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
'in \n(.iu+\nxu
[--cacherep=\fIurl\fR] [--cwd=\fIdir\fR] [--dart] [--exclude-module=\fImoduleOrFile\fR...] [--force] [--include-language] [--include-runtime] [--jdk-provider=\fImodule\fR] [--js] [--jvm] [--link-with-current-distribution] [--maven-overrides=\fIfile\fR] [--no-default-repositories] [--offline] [--out=\fIfile\fR] [--overrides=\fIfile\fR] [--rep=\fIurl\fR...] [--run=\fItoplevel\fR] [--sysrep=\fIurl\fR] [--timeout=\fIseconds\fR] [--verbose[=\fIflags\fR]] [--] {module}\&...
'in \n(.iu-\nxu
.ad b
'hy
.SH DESCRIPTION
Generate an executable \fInull\fR which contains the given module and all its run-time dependencies, including the Ceylon run-time, which makes that jar self-sufficient and executable by \*(T<java\*(T> as if the Ceylon module was run by \*(T<ceylon run\*(T>.
.SH OPTIONS
.TP 
--cacherep=\fIurl\fR
Specifies the folder to use for caching downloaded modules. (default: \*(T<~/.ceylon/cache\*(T>)
.TP 
--cwd=\fIdir\fR
Specifies the current working directory for this tool. (default: the directory where the tool is run from)
.TP 
--dart
Include artifacts compiled for Dart (\*(T<.dart\*(T> and \*(T<\-dartmodel.json\*(T>) (default: \*(T<true\*(T>)
.TP 
--exclude-module=\fImoduleOrFile\fR, -x \fImoduleOrFile\fR
Excludes modules from the resulting far jat. Can be a module name or a file containing module names. Can be specified multiple times. Note that this excludes the module from the resulting assembly, but if your modules require that module to be present at runtime it will still be required and may cause your application to fail to start if it is not provided at runtime.
.TP 
--force
Ignore errors about conflicting modules.
.TP 
--include-language
Include the language module and its dependencies in the assembly. to ensures that the assembly can be run stand-alone using Java without having Ceylon installed. This option does NOT support module isolation!
.TP 
--include-runtime
Include enough of the Ceylon runtime in the assembly to ensure that the assembly can be run stand-alone using Java without having Ceylon installed. This option supports full module isolation.
.TP 
--jdk-provider=\fImodule\fR
Alternate JDK provider module (defaults to the current running JDK).
.TP 
--js
Include artifacts compiled for JavaScript (\*(T<.js\*(T> and \*(T<\-model.js\*(T>) (default: \*(T<false\*(T>)
.TP 
--jvm
Include artifacts compiled for the JVM (\*(T<.car\*(T> and \*(T<.jar\*(T>) (default: \*(T<true\*(T>)
.TP 
--link-with-current-distribution
Downgrade which were compiled with a more recent version of the distribution to the version of that module present in this distribution (1.3.3). This might fail with a linker error at runtime. For example if the module depended on an API present in the more recent version, but absent from 1.3.3. Allowed arguments are upgrade, downgrade or abort. Default: upgrade
.TP 
--maven-overrides=\fIfile\fR
Specifies the XML file to use to load Maven artifact overrides. See http://ceylon-lang.org/documentation/current/reference/repository/maven/ for information. Deprecated: use --overrides.
.TP 
--no-default-repositories
Indicates that the default repositories should not be used.
.TP 
--offline, -L
Enables offline mode that will prevent connections to remote repositories.
.TP 
--out=\fIfile\fR, -o \fIfile\fR
Target assembly file (defaults to \*(T<{name}\-{version}.jar\*(T>).
.TP 
--overrides=\fIfile\fR, -O \fIfile\fR
Specifies the XML file to use to load module overrides. See http://ceylon-lang.org/documentation/current/reference/repository/maven/ for information. \fInull\fR.
.TP 
--rep=\fIurl\fR
Specifies a module repository containing dependencies. Can be specified multiple times. (default: \*(T<modules\*(T>, \*(T<~/.ceylon/repo\*(T>, \*(T<https://modules.ceylon\-lang.org/repo/1\*(T>)
.TP 
--run=\fItoplevel\fR
Specifies the fully qualified name of a toplevel method or class with no parameters. The format is: \*(T<qualified.package.name::classOrMethodName\*(T> with \*(T<::\*(T> acting as separator between the package name and the toplevel class or method name (defaults to \*(T<{module}::run\*(T>).
.TP 
--sysrep=\fIurl\fR
Specifies the system repository containing essential modules. (default: \*(T<$CEYLON_HOME/repo\*(T>)
.TP 
--timeout=\fIseconds\fR, -T \fIseconds\fR
Sets the timeout for connections to remote repositories, use 0 for no timeout (default: 20).
.TP 
--verbose[=\fIflags\fR], -d
Produce verbose output. If no \*(T<flags\*(T> are given then be verbose about everything, otherwise just be verbose about the flags which are present. Allowed flags include: \*(T<all\*(T>, \*(T<loader\*(T>.
